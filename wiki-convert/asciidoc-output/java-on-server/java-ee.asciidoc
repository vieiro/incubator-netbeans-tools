// 
//     Licensed to the Apache Software Foundation (ASF) under one
//     or more contributor license agreements.  See the NOTICE file
//     distributed with this work for additional information
//     regarding copyright ownership.  The ASF licenses this file
//     to you under the Apache License, Version 2.0 (the
//     "License"); you may not use this file except in compliance
//     with the License.  You may obtain a copy of the License at
// 
//       http://www.apache.org/licenses/LICENSE-2.0
// 
//     Unless required by applicable law or agreed to in writing,
//     software distributed under the License is distributed on an
//     "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
//     KIND, either express or implied.  See the License for the
//     specific language governing permissions and limitations
//     under the License.
//

= java-ee
:jbake-type: page
:jbake-tags: oldsite, needsreview
:jbake-status: published
:keywords: Apache NetBeans  java-ee
:description: Apache NetBeans  java-ee
:toc: left
:toc-title:

 

== Java Enterprise Edition Support

link:../../images_www/v7/1/screenshots/web-app.png[image:../../images_www/v7/1/screenshots/web-app-cut.png[][font-11]#Click image for fullscreen preview#]

NetBeans IDE delivers excellent support for developing Web and server side applications that utilize the Java EE platform. The IDE support has been developed in close cooperation with the Java EE and GlassFish teams to provide the tightest integration and easiest possible use of the Java EE specification. Concequently, if you are new to the Java EE specification and framework, using NetBeans IDE is the best way to quickly learn and become productive in Java EE programming.

    [overview-right]#link:../../images_www/v7/3/features/java-ee-7-full.png[image:../../images_www/v7/3/features/java-ee-7-full-cut.png[]]#

=== Support for Java Enterprise Edition 7

NetBeans IDE provides complete support for the latest Java EE 7 standards, including support for JSF 2.2 (Facelets), Java Persistence 2.1 and Contexts and Dependency Injection 1.1, link:web-services.html[JAX-RS and JAX-WS based Web services], and the older Java EE 6 and Java EE 5 platforms.

The support provided in the IDE ranges from wizards that can be used to quickly create the application, editor support in generating Java EE artefacts and consuming them, configuring the applications, and build, deployment, execution and testing support. With all of these capabilities, your efforts will be focused on implementing the business logic aspects of your application.

link:../../kb/trails/java-ee.html[Java EE and Java Web Learning Trail]

     [overview-left]#link:../../images_www/v7/3/features/ejb-dev.png[image:../../images_www/v7/3/features/ejb-dev-cut.png[]]#

=== Simplified EJB Development

The IDE supports the latest EJB 3.2 specification, including in web application projects. The EJB project file wizard provides options for creating Session beans including Singleton session beans, Message Driven beans for processing asynchronous messages, as well as Timer session beans for working with timed notifications. You can use a wizard to easily create a Session Bean for an entity class including the appropriate annotations and commonly used default methods. Beans can be exposed with a local interface or a no-interface view. There is support also for calling EJB beans using code-insertion wizards in the editor

link:../../kb/docs/javaee/javaee-entapp-ejb.html[Creating an Enterprise Application with EJB 3.1]

     [overview-right]#link:../../images_www/v7/3/features/jsf-dev.png[image:../../images_www/v7/3/features/jsf-dev-cut.png[]]#

=== JSF Development

NetBeans IDE supports the latest JavaServer Faces (JSF) 2.2 standard, as well as the older 2.1 and earlier standards. NetBeans IDE supports Facelets, the official view technology for JSF 2.2. You can create a new web application project based on the Facelets framework and work with standard JSF reference implementation components.

The IDE also supports various JSF component libraries (*PrimeFaces, RichFaces, ICEfaces*) that can simplify the development of Facelets pages. Code wizards and templates are included for generating PrimeFaces applications, with database interaction code included.

link:../../kb/docs/web/jsf20-intro.html[Introduction to JavaServer Faces]

     [overview-left]#link:../../images_www/v7/3/features/jpa-dev.png[image:../../images_www/v7/3/features/jpa-dev-cut.png[]]#

=== JPA Support

The IDE provides tools to work with Java Persistence API 2.1. Wizards enable you to generate entity classes from a database, and a JavaServer Faces CRUD (Create Retrieve Update Delete) application from entity classes. The IDE supports all types of entity relationships (one-to-one, one-to-many, many-to-one, and many-to-many) and all types of primary keys (single-column, composite, and generated). The IDE also provides templates and graphic editors for creating and maintaining persistence units.

The IDE now has a stand alone JPQL editor where you can run your JPQL query directly from the IDE.

 
|===

|=== JSF Templates Support

 |

=== JSP Development

 |

=== Web Profile Support

 

|[overview-centre]#image:../../images_www/v7/3/features/template-wizard-cut.png[]#
The IDE provides a Facelets Template wizard for creating Facelets templates, and a Facelets Template Client wizard for creating files that rely on a template.

 |

[overview-centre]#image:../../images_www/v7/3/features/jsp-dev-cut.png[]#
In JavaServer Pages (JSP) files, the editor assists you with code completion, hypertext navigation, error checking, and debugging. You can drag and drop code snippets from a pallete. There is support for creating and using custom tag libraries.

link:../../kb/docs/web/quickstart-webapps.html[Introduction to developing Web applications with JSP]

 |

[overview-centre]#image:../../images_www/v7/3/features/ee-7-web-profile-cut.png[]#
The link:http://www.oracle.com/technetwork/java/javaee/tech/index.html[Java EE Web Profile] defines a subset of specifications that can be used to build Web applications. NetBeans provides out of the box support for creating applications with the Web profile.

 

|=== Wizard Based Client Generation

 |

=== CDI Support

 |

=== JPQL Editor

 

|[overview-centre]#image:../../images_www/v7/3/features/jsf-crud-gen-cut.png[]#
Use the JSF CRUD application generator (Create/Read/Update/Delete) to create a complete functional JSF page for manipulating data from a database. The New File wizard can generate customizable CRUD JSF pages from existing entities.

 |

[overview-centre]#image:../../images_www/v7/3/features/cdi-support-cut.png[]#
Use the New Project wizard or new File wizard to create files that are ready for Contexts and Dependency Injection (CDI). Editor support such as right-clicking any injection point to access Go To Injectables and Inspect Injectables menu actions is available.

link:../../kb/docs/javaee/cdi-intro.html[Getting started with CDI and JSF 2.0]

 |

[overview-centre]#image:../../images_www/v7/3/features/jpa-jpql-cut.png[]#
With the stand alone JPQL editor, you can run your query from the ide directly, instead of running your JPA application to test your queries. JPQL Editor supports code completion for JPQL keywords. For managed entities, it can provide you SQL representation of your JPQL query if eclipselink or hibernate provider is used. It can also hint at what is wrong with your JPQL query.

 

|=== WebSocket Support

 |

 |

 

|[overview-centre]#image:../../images_www/v7/3/features/websocket-endpoint-cut.png[]#
The IDE provides support for creating web applications that uses the Java API for WebSocket (JSR 356) to enable bi-directional communication between browser clients and the application server.

link:../../kb/docs/javaee/maven-websocketapi.html[Using the WebSocket API]

 
|===

=== See Also

* link:/community/releases/81/index.html[NetBeans IDE 8.1 Release Page] for a list of highlighted features in the latest stable release.
* link:../../kb/trails/java-ee.html[Java EE and Java Web Learning Trail] for tutorials that will help you get started.

NOTE: This document was automatically converted to the AsciiDoc format on 2018-03-07, and needs to be reviewed.
