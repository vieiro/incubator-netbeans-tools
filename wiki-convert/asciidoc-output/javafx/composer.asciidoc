// 
//     Licensed to the Apache Software Foundation (ASF) under one
//     or more contributor license agreements.  See the NOTICE file
//     distributed with this work for additional information
//     regarding copyright ownership.  The ASF licenses this file
//     to you under the Apache License, Version 2.0 (the
//     "License"); you may not use this file except in compliance
//     with the License.  You may obtain a copy of the License at
// 
//       http://www.apache.org/licenses/LICENSE-2.0
// 
//     Unless required by applicable law or agreed to in writing,
//     software distributed under the License is distributed on an
//     "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
//     KIND, either express or implied.  See the License for the
//     specific language governing permissions and limitations
//     under the License.
//

= composer
:jbake-type: page
:jbake-tags: oldsite, needsreview
:jbake-status: published
:keywords: Apache NetBeans  composer
:description: Apache NetBeans  composer
:toc: left
:toc-title:

== JavaFX Composer

link:../../images_www/v6/9/screenshots/javafx-composer.png[image:javafx-composer-cut.png[][font-11]#Click image for full screen preview#]

*The visual layout tool for JavaFX applications.*

*Warning:* JavaFX Composer is a tool for the JavaFX 1.x scripting language. This scripting language is not included in JavaFX 2.x. For this reason, JavaFX Composer cannot be used with JavaFX 2.0.

The last version of NetBeans IDE that supports JavaFX 1.x and JavaFX Composer is NetBeans IDE 6.9.1. JavaFX 2.0 support is available starting in NetBeans IDE 7.1. For more information about using JavaFX 2.0 with NetBeans IDE, see the link:http://wiki.netbeans.org/JavaFX[JavaFX NetBeans wiki]. For more information about using JavaFX 1.x with NetBeans IDE, see the link:http://wiki.netbeans.org/JavaFX1.3[JavaFX 1.3 NetBeans wiki].

|===
|=== JavaFX Composer

 

The JavaFX Composer is a visual layout tool for JavaFX applications, like the NetBeans GUI Builder is for Java SE applications. Create GUIs with standard JavaFX controls and use states to define application flow.

 |

image:javafx-composer.png[]

 

|=== State Management

 

The JavaFX States Window gives you acute control over a component's animation, visibility, and properties. To control components you define states, sets of property values that apply at the same point of time.

Define the default properties in the master state, then create parallel sets of states for properties that change independently. Your application responds to user input by switching to another state.


=== For All the Screens of Your Life

 

The JavaFX Composer makes it easy to develop applications with multiple screens, that can be used on mobile devices, TV systems, the desktop, and in web browsers. Every project comes with an IDE-generated Ant build script to build and run your application. The build script is pre-configured for running your application as Web Start (JNLP), as browser Applet, on the JavaFX mobile emulator, or on the JavaFX TV emulator.

 |

image:javafx-states.png[]

link:http://www.javafx.com/[image:javafx-screens.png[]]

 

|=== Built-in Data Connectivity image:new_small.gif[]

If your JavaFX application requires connecting to data sources, use the project templates to easily create a JavaFX Business Desktop Application or a JavaFX Mobile Business Application. Use the Design View to connect the user interface to data sources, such as RESTful web services, databases, local filesystem, or data files.


image:arrow-button.gif[] link:https://netbeans.org/kb/trails/matisse.html[JavaFX and Swing GUI Learning Trail].

image:arrow-button.gif[] link:http://www.javafx.com/[javafx.com] with downloads, demos, FAQs and documentation.

 |

image:javafx-data.png[]

 
|===



NOTE: This document was automatically converted to the AsciiDoc format on 2018-03-08, and needs to be reviewed.
