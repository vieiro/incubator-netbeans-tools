// 
//     Licensed to the Apache Software Foundation (ASF) under one
//     or more contributor license agreements.  See the NOTICE file
//     distributed with this work for additional information
//     regarding copyright ownership.  The ASF licenses this file
//     to you under the Apache License, Version 2.0 (the
//     "License"); you may not use this file except in compliance
//     with the License.  You may obtain a copy of the License at
// 
//       http://www.apache.org/licenses/LICENSE-2.0
// 
//     Unless required by applicable law or agreed to in writing,
//     software distributed under the License is distributed on an
//     "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
//     KIND, either express or implied.  See the License for the
//     specific language governing permissions and limitations
//     under the License.
//

= index_ja
:jbake-type: page
:jbake-tags: oldsite, needsreview
:jbake-status: published
:keywords: Apache NetBeans  index_ja
:description: Apache NetBeans  index_ja
:toc: left
:toc-title:

== C/C++の開発

link:../../images_www/v7/screenshots/cnd.png[image:../../images_www/v7/screenshots/cnd-cut.png[]]
link:../../images_www/v7/1/screenshots/cnd.png[[font-11]#イメージをクリックして全画面表示#]

Windows、Linux、OS XおよびSolarisオペレーティング・システムなど、様々なプラットフォーム向けの本格的なネイティブ・アプリケーションをC/C++およびFortranで開発できます。

[overview-right]#image:../../images_www/v6/5/features/cpp-editor.png[]

image:../../images_www/v7/2/features/cpp-11.png[]#

=== C/C++プロジェクト

NetBeans IDEには、C/C++用のプロジェクト・タイプと適切なプロジェクト・テンプレートが含まれています。動的ライブラリや静的ライブラリとともに、C/C++アプリケーションを操作および作成できます。また、既存のコードからC/C++プロジェクトを作成することもできます。C/C++プロジェクトはFortranファイルとアセンブラ・ファイルもサポートしています。

IDEにバイナリ・ファイルをドラッグ・アンド・ドロップするのみで、簡単に新しいプロジェクトを最初から作成できるようになりました。プロジェクト・システムによって自動的にソース・ファイルが検出され、プロジェクトに追加される他、コード支援が構成され、プロジェクトの依存性も調査されます。さらに、「実行」および「デバッグ」コマンドの構成がより柔軟になり、静的ライブラリおよび動的ライブラリの実行とデバッグができるようになりました。

  [overview-left]#image:../../images_www/v6/features/cpp-debugger_200px.jpg[]

image:../../images_www/screenshots/7.0/cnddebugger-eval-window.png[]#

=== GNUデバッガ統合

C/C++エディタは、複数セッションのGNU gdbデバッガと統合されています。変数、例外、システム・コール、行および関数のブレークポイントを設定し、「ブレークポイント」ウィンドウに表示できます。コール・スタックとローカル変数の検査、ウォッチの作成、スレッドの表示が行えます。選択した式の上にカーソルを移動してツールチップを表示すると、その式を評価できます。「逆アセンブリ」ウィンドウには、現在のソース・ファイルのアセンブリ命令が表示されます。

プリティ・プリンティングの追加サポートにより、ユーザーはSTLタイプの変数を「変数」または「ウォッチ」ビューのわかりやすい表示を使用して分析できます。

「式評価」ウィンドウでは、現在のプログラム・コンテキストでカスタム式を評価できます。

  [overview-right]#image:../../images_www/screenshots/7.0/cnd-template-annotations.png[]#

=== コード支援

高速コード補完とリファクタリングの利点をC/C++およびQtのファイルに活用できます。改善された機能には、プリプロセッサ・ディレクティブやプリプロセッサ・ブロックに対するコード補完やナビゲーションなどがあります。リファクタリングはエディタ、クラス・ビュー、およびナビゲータで使用できます。これらを使用して、メソッド・パラメータを変更したり、基本フィールドのカプセル化コードを生成(Alt-Insert)したりできます。スペル・チェックをコメントおよびリテラルで使用できます。

 

|===
|=== C/C++エディタ

 |

=== C++11のサポート

 |

=== 単体テスト

 

|C/C++エディタには、構文と意味解釈の強調表示、自動インデントとフォーマット(フォーマット・スタイルの選択を含む)、括弧の一致、コード折りたたみ、およびテンプレートなどが用意されています。

 |

C++向けのNetBeans IDEは、C++11を使用した開発に固有な多数の機能を備えています。C++11機能は、エディタ、コード支援、ナビゲーションおよびプロジェクト・システムで使用できます。

 |

IDEからすぐにC/C++テストを作成および実行できます。テスト結果は明確に、ユーザーにとってわかりやすく表示されます。

 

|=== コンパイラの構成

 |

=== パッケージング

 |

=== Qtツールキットのサポート

 

|NetBeans IDEは、Oracle Solaris Studio、GNU、CLang/LLVM、Cygwin、MinGWなど、様々な主要コンパイラをサポートしています。コンパイラ、プリプロセッサ定義、コンパイル時オプション、言語標準(例: C++11)など、多数の事項を指定できます。

 |

コンパイルされたアプリケーションがTARファイル、ZIPファイル、SVR4パッケージ、RPM、またはDebianパッケージとして自動的にパッケージングされるように、プロジェクトを構成できます。

 |

Qtアプリケーション開発フレームワークは、GUIフォーム、リソース、および翻訳などのQtファイルの作成に使用します。フォーム・ファイル用のQt Designer、翻訳用のQt Linguistなどの標準Qt編集ツールは、必要に応じて自動的に起動します。Qt固有のプロジェクト・プロパティを使用して、生成されたQmakeプロジェクト・ファイルを調整できます。

 

|=== ソースの検査

 |

=== リモート開発

 |

=== ファイル・ナビゲーション

 

|クラスの継承階層、ヘッダーのインクルードの階層、タイプの階層などを検査できます。「クラス」ウィンドウを使用して、クラス階層間をナビゲートできます。プロジェクト内の全クラスや、各クラスのメンバーやフィールドを表示できます。「コール・グラフ」ウィンドウには、選択した機能のすべてのコール元/コール先が表示されます。直接コール・グラフと逆コール・グラフを切り替えたり、グラフのレイアウトを変更したりできます。マクロ・ビューを使用すると、前処理後のコードがどのようになるかを理解するのに役立ちます。「オーバーライドしている」または「オーバーライドされている」注釈を使用して、親クラスと子孫クラスの間をナビゲートします。汎用のテンプレートと特殊化されたテンプレートの間も、対応する注釈を使用してナビゲートできます。

 |

クライアント・システムからリモート・ホスト上の開発ツールを使用して、ローカルで実行するのと同じくらい簡易にプロジェクトをビルド、実行、およびデバッグできます。リモート・ホストとの様々な同期方法によって、必要な信頼性、パフォーマンス、および容易性を実現できます。リモート・ファイル・システム内のナビゲーションがわかりやすくなり、論理的に想定される場所で利用できるようになりました。

新しいリモート・ツールバー(「表示」>「ツールバー」>「リモート」)でホストを切り替えてプロジェクトを開き、新しいプロジェクトをリモート・ホストで作成できることを確認してください。

 |

「ファイルへ移動」、「型に移動」および「シンボルへ移動」の各アクションを使用して、目的の要素にすばやくナビゲートします。ハイパーリンクを使用すると、カーソル位置にある要素の使用状況と宣言との間を1回のクリックで切り替えることができます。

エディタ・ツールバーの「ヘッダーへ移動」または「ソースへ移動」ボタンを使用すると、ソース・ファイルとヘッダー・ファイルとの間をすばやく切り替えることができます。

「使用状況」ウィンドウには、クラス(構造)、関数、変数、マクロ、#includeディレクティブ、またはファイルがプロジェクトのソース・コードに使用されている場所が表示されます。リモート・ファイル・システムもサポートされます。

 
|===

=== 関連項目

* 最新の安定版リリースの個別機能のリストについては、link:/community/releases/81/index.html[NetBeans IDE 8.1リリース・ページ]を参照してください。
* 作業を開始する際に役立つチュートリアルについては、link:../../kb/trails/cnd.html[C/C++の学習]を参照してください。

NOTE: This document was automatically converted to the AsciiDoc format on 2018-03-07, and needs to be reviewed.
