// 
//     Licensed to the Apache Software Foundation (ASF) under one
//     or more contributor license agreements.  See the NOTICE file
//     distributed with this work for additional information
//     regarding copyright ownership.  The ASF licenses this file
//     to you under the Apache License, Version 2.0 (the
//     "License"); you may not use this file except in compliance
//     with the License.  You may obtain a copy of the License at
// 
//       http://www.apache.org/licenses/LICENSE-2.0
// 
//     Unless required by applicable law or agreed to in writing,
//     software distributed under the License is distributed on an
//     "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
//     KIND, either express or implied.  See the License for the
//     specific language governing permissions and limitations
//     under the License.
//

= build-tools
:jbake-type: page
:jbake-tags: oldsite, needsreview
:jbake-status: published
:keywords: Apache NetBeans  build-tools
:description: Apache NetBeans  build-tools
:toc: left
:toc-title:

 

== Build Tools

link:../../images_www/v7/3/features/ide-buildtools-maven-full.png[image:ide-buildtools-maven-cut.png[] [font-11]# Click image for fullscreen preview#]

Take control of your build right where your code is—with standard build tools integrated into the IDE.

    [overview-right]#link:../../images_www/v7/3/features/ide-collaboration-hudson-full.png[image:ide-collaboration-hudson-cut.png[]]#

=== Hudson

NetBeans IDE lets you create and manage Hudson continuous servers and related Hudson jobs. You can register Hudson instances, create new Hudson jobs, run Hudson jobs, and view results provided by the server.

Browse your hosted Hudson jobs, builds, workspaces, and artifacts, and inspect the build console in the Output window. When a build fails, you are notified immediately in the IDE's status bar.

To find out why a job failed, right-click a build node and inspect stack traces for all failed tests. You can also view the changelog and browse file diffs in a user-friendly way, right inside the IDE.

link:http://wiki.netbeans.org/HudsonInNetBeans[Hudson in NetBeans IDE]

     [overview-left]#link:../../images_www/v7/3/features/ide-buildtools-maven-full.png[image:ide-buildtools-maven-cut2.png[]]#

=== Maven

NetBeans IDE supports the Maven build system to help you manage project dependencies, builds, reports, and documentation. Open, build, run, debug, profile, and deploy your existing Maven projects, which can be opened directly into the IDE, without an import procedure. Wizards are provided for creating new applications based on existing Maven Archetypes.

When you are running, testing, or debugging your applications, the IDE executes Maven goals from your pom.xml file. The XML editor includes dedicated features for Maven, such as code completion, code templates, and code generators.

The IDE's Maven Repository browser lets you browse the content of your local repository and any registered remote repositories. Add your own repositories, search for artifacts, and add artifacts as dependencies to projects. You can view library dependencies, runtime dependencies, and test library dependencies. Views distinguish between dependency types and mark the local availability of javadoc and sources. Graphs show direct and transitive dependencies and identify version conflicts. Tools are provided for including and excluding dependencies.

link:http://wiki.netbeans.org/MavenBestPractices[Maven in NetBeans IDE]

     [overview-right]#link:../../images_www/v7/3/features/ide-buildtools-ant-full.png[image:ide-buildtools-ant-cut.png[]]#

=== Ant

The default NetBeans IDE project system is built directly on top of the Ant build system. All of the project commands, such as "Build Project" and "Run File in Debugger", call targets in the project's Ant script. You can therefore build and run your project outside the IDE exactly as it is built and run inside the IDE.

You do not need to be familiar with Ant to work with applications in the IDE. You can set all the basic compilation and runtime options in your project's Project Properties dialog box and the IDE automatically updates the project's Ant script. If you know how to work with Ant, you can customize a project's Ant script directly or write your own Ant script for your project.

 

=== See Also

* link:/community/releases/73/index.html[NetBeans IDE 7.3 Release Page] for a list of specific features in the latest stable release.
* Get more details about features of the latest stable release on the link:http://wiki.netbeans.org/NewAndNoteworthyNB73[NetBeans IDE 7.3 New and Noteworthy page].

NOTE: This document was automatically converted to the AsciiDoc format on 2018-03-08, and needs to be reviewed.
